name: CI pipeline

# Quando a pipeline vai executar. o ON √© um trigger
on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

# Jobs que a pipeline vai fazer
jobs:
  test:                           # nome do Job
    runs-on: ubuntu-latest        # OS da VM

    # Passos que ser√£o executados nesse Job
    steps:
      # Passo 1: Baixa o c√≥digo da branch
      -  name: Checkout code
         uses: actions/checkout@v4
      
      # Passo 2: Instala o Node.js na VM
      -  name: Setup Node.js
         uses: actions/setup-node@v4
         with:
          node-version: '18'
          cache: 'npm'
        
      # Passo 3: Instala as deps do projeto
      -  name: Install deps
         run: npm ci

      # Passo 4: Executa testes
      -  name: Run tests
         run: npm test
  
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push' # s√≥ faz o deploy se for push na branch develop
    evironment: staging

    steps:
      -  name: Deploy to staging
         env:
          RENDER_STAGING_HOOK_URL: ${{ secrets.RENDER_STAGING_HOOK_URL }}
        run: |
          echo "Deploying to STAGING environment..."
          curl -X POST $RENDER_STAGING_HOOK_URL
          echo "‚úÖ Staging deploy initiated"

  # Job 2: Deploy
  deploy-prod:
    # S√≥ executa se o job test der certo
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' # s√≥ faz o deploy se for push(n√£o PR) na branch master
    environment:
      name: production
      url: https://e-commerce-api-ts.onrender.com

    steps:
      -  name: Deploy no Render
         env:
          RENDER_PROD_HOOK_URL: ${{ secrets.RENDER_PROD_HOOK_URL }}
         run: |
          echo "Deploying to PRODUCTION environment..."
          curl -X POST $RENDER_PROD_HOOK_URL
          echo "üöÄ Production deploy initiated"